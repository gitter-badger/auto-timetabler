{"ts":1341103040718,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"//@project: Auto-Timetabler\n//@author: jpillora\n//@date: 15/6/2012\n//\n//Subject classes\n$(function(){\n  \n  //Private helpers\n  var log = function(sub, str) { console.log(\"Subject: \" + sub.id + \": \" + str); };\n  \n  window.Subject = Backbone.Model.extend({\n    initialize: function() {\n      if (!this.get(\"summary\")) this.set({\"summary\": \"COMP9321 Web Applications\"});\n      if (!this.get(\"description\")) this.set({\"description\": \"An interesting course on the interwebs.\"});\n      \n      this.classes = new ClassList();\n      this.classes.localStorage = new Store(\"class-backbone-from-\"+this.get('name'));\n    },\n    clear: function(opts) {\n      while(this.classes.length) {\n        this.classes.first().clear({silent: true}); \n      }\n      this.destroy(opts);\n    }\n  });\n\n  window.SubjectList = Backbone.Collection.extend({\n    model: Subject,\n    initialize: function() {},\n    localStorage: new Store(\"subject-backbone\")\n  });\n  \n  //Singleton app-wide instance\n  window.subjects = new SubjectList();\n  \n  window.SubjectView = Backbone.View.extend({\n    tagName:  \"div\",\n\n    // Cache the template function for a single item.\n    subjectTemplate: _.template($('#subject-template').html()),\n    classHeadingTemplate: _.template($('#class-heading-template').html()),\n     \n    events: {\n      \"click .remove\":  \"clear\",\n      \"click .create\":  \"createOne\"\n    },\n    \n    initialize: function () {\n      \n      _.bindAll(this);\n      \n      this.model.bind('change', this.render, this);\n      this.model.bind('destroy', this.animRemove, this);\n      \n      this.model.classes.bind('add', this.addOne, this);\n      this.model.classes.bind('reset', this.addAll, this);\n      //this.model.classes.bind('all', this.render, this);\n      \n      this.editor = this.$(\".edit\").hide();\n      this.classTable = $(\"<table/>\").append(this.classHeadingTemplate());\n      this.model.classes.fetch();\n    },\n    \n    render: function() {\n      log(this.model,\"Render View\");\n      this.$el.addClass(\"subject\");\n      this.$el.html(this.subjectTemplate(this.model.toJSON()));\n      this.$(\".list\").append(this.classTable);\n      this.renderButtons();\n      this.renderEditables(this.saveEditables);\n      return this;\n    },\n    \n    addOne: function(cl) {\n      var v = new ClassView({model: cl});\n      var e = v.render().$el;\n      this.classTable.append(e.hide());\n      e.fadeIn('slow');\n    },\n\n    addAll: function() {\n      this.model.classes.each(this.addOne);\n    },\n\n    createOne: function() {\n      log(this.model,\"Create one Class\");\n      this.model.classes.create({  location: \"class-from-\"+this.model.get('name') },{wait: true});\n    },\n    \n    saveEditables: function(obj) {\n      log(this.model, \"Save to model: \" + JSON.stringify(obj));\n      this.model.save(obj);\n    },\n    \n    // Remove the item, destroy the model.\n    clear: function(e) {\n      log(this.model,\"Remove\");\n      e.stopImmediatePropagation();\n      this.model.clear();\n    },\n    \n    animRemove: function() {\n      this.$el.fadeOut('slow', function() {\n        $(this).remove();\n      })\n    }\n    \n  });\n  \n  \n});"]],"start1":0,"start2":0,"length1":0,"length2":3093}]],"length":3093}
